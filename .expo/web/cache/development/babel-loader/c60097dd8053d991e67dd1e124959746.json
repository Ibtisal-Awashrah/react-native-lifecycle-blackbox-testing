{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\React\\\\Thesis Project\\\\my-project\\\\components\\\\DoubleOrientationChange.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport renderer from \"react-test-renderer\";\nimport * as ScreenOrientation from \"expo-screen-orientation\";\nimport { diffString, diff } from \"json-diff\";\nexport var DoubleOrientationChange = function (_Component) {\n  _inherits(DoubleOrientationChange, _Component);\n\n  var _super = _createSuper(DoubleOrientationChange);\n\n  function DoubleOrientationChange(props) {\n    var _this;\n\n    _classCallCheck(this, DoubleOrientationChange);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      oracleJSON: {},\n      uiJSON: {}\n    };\n    return _this;\n  }\n\n  _createClass(DoubleOrientationChange, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      console.log(\"componentWillMount called.\");\n      AppState.addEventListener(\"change\", this._handleWillMount());\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"componentDidMount called.\");\n      AppState.removeEventListener(\"change\", this._handleWillMount());\n    }\n  }, {\n    key: \"_handleWillMount\",\n    value: function _handleWillMount() {\n      var guiTree;\n      return _regeneratorRuntime.async(function _handleWillMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              guiTree = renderer.create(this.props.children).toJSON();\n              console.log(\"hi i am before orientation\");\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(this.setState({\n                oracleJSON: guiTree\n              }));\n\n            case 4:\n              this.changeScreenOrientation();\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"_handleDidMount\",\n    value: function _handleDidMount() {\n      var guiTree = renderer.create(this.props.children).toJSON();\n      console.log(\"hi i am after orientation\");\n      this.setState({\n        uiJSON: guiTree\n      });\n    }\n  }, {\n    key: \"changeScreenOrientation\",\n    value: function changeScreenOrientation() {\n      console.log(\"Set Double Orientation Change\");\n      ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE_LEFT);\n      ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.PORTRAIT_UP);\n\n      this._handleDidMount();\n\n      this.printChange();\n    }\n  }, {\n    key: \"printChange\",\n    value: function printChange() {\n      var diff = diffString(th, this.state.oracleJSON);\n\n      if (diff) {\n        console.log(\"The Diffrence\");\n        console.log(diff);\n      } else console.log(\"No Diff\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return DoubleOrientationChange;\n}(Component);\nexport default DoubleOrientationChange;","map":{"version":3,"sources":["C:/React/Thesis Project/my-project/components/DoubleOrientationChange.js"],"names":["React","Component","renderer","ScreenOrientation","diffString","diff","DoubleOrientationChange","props","state","oracleJSON","uiJSON","console","log","AppState","addEventListener","_handleWillMount","removeEventListener","guiTree","create","children","toJSON","setState","changeScreenOrientation","lockAsync","OrientationLock","LANDSCAPE_LEFT","PORTRAIT_UP","_handleDidMount","printChange","th"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,KAAKC,iBAAZ,MAAmC,yBAAnC;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,WAAjC;AAEA,WAAaC,uBAAb;AAAA;;AAAA;;AACE,mCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAFiB;AAMlB;;AAPH;AAAA;AAAA,WASE,qCAA4B;AAE1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAC,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoC,KAAKC,gBAAL,EAApC;AAED;AAdH;AAAA;AAAA,WAgBE,6BAAoB;AAElBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAGAC,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,QAA7B,EAAuC,KAAKD,gBAAL,EAAvC;AACD;AAtBH;AAAA;AAAA,WAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AACQE,cAAAA,OADR,GACkBf,QAAQ,CAACgB,MAAT,CAAgB,KAAKX,KAAL,CAAWY,QAA3B,EAAqCC,MAArC,EADlB;AAEET,cAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AAFF;AAAA,+CAGQ,KAAKS,QAAL,CAAc;AAAEZ,gBAAAA,UAAU,EAAEQ;AAAd,eAAd,CAHR;;AAAA;AAIE,mBAAKK,uBAAL;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxBF;AAAA;AAAA,WA8BE,2BAAkB;AAChB,UAAML,OAAO,GAAGf,QAAQ,CAACgB,MAAT,CAAgB,KAAKX,KAAL,CAAWY,QAA3B,EAAqCC,MAArC,EAAhB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,WAAKS,QAAL,CAAc;AAAEX,QAAAA,MAAM,EAAEO;AAAV,OAAd;AACD;AAlCH;AAAA;AAAA,WAoCE,mCAA0B;AACxBN,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AAEAT,MAAAA,iBAAiB,CAACoB,SAAlB,CACEpB,iBAAiB,CAACqB,eAAlB,CAAkCC,cADpC;AAGAtB,MAAAA,iBAAiB,CAACoB,SAAlB,CAA4BpB,iBAAiB,CAACqB,eAAlB,CAAkCE,WAA9D;;AACA,WAAKC,eAAL;;AACA,WAAKC,WAAL;AACD;AA7CH;AAAA;AAAA,WA+CE,uBAAc;AACZ,UAAMvB,IAAI,GAAGD,UAAU,CAACyB,EAAD,EAAK,KAAKrB,KAAL,CAAWC,UAAhB,CAAvB;;AACA,UAAIJ,IAAJ,EAAU;AACRM,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEAD,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACD,OAJD,MAIOM,OAAO,CAACC,GAAR,CAAY,SAAZ;AACR;AAtDH;AAAA;AAAA,WAuDE,kBAAS;AACP,aAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AAzDH;;AAAA;AAAA,EAA6CX,SAA7C;AA4DA,eAAeK,uBAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Text, View, AppState } from \"react-native\";\r\nimport renderer from \"react-test-renderer\";\r\nimport * as ScreenOrientation from \"expo-screen-orientation\";\r\nimport { diffString, diff } from \"json-diff\";\r\n\r\nexport class DoubleOrientationChange extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      oracleJSON: {},\r\n      uiJSON: {},\r\n    };\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    // first step\r\n    console.log(\"componentWillMount called.\");\r\n    AppState.addEventListener(\"change\", this._handleWillMount());\r\n    //AppState.removeEventListener(\"change\", this._handleDidMount());\r\n  }\r\n\r\n  componentDidMount() {\r\n    // last step\r\n    console.log(\"componentDidMount called.\");\r\n\r\n    //AppState.addEventListener(\"change\", this._handleDidMount());\r\n    AppState.removeEventListener(\"change\", this._handleWillMount());\r\n  }\r\n\r\n  async _handleWillMount() {\r\n    const guiTree = renderer.create(this.props.children).toJSON();\r\n    console.log(\"hi i am before orientation\");\r\n    await this.setState({ oracleJSON: guiTree });\r\n    this.changeScreenOrientation();\r\n  }\r\n  _handleDidMount() {\r\n    const guiTree = renderer.create(this.props.children).toJSON();\r\n    console.log(\"hi i am after orientation\");\r\n    this.setState({ uiJSON: guiTree });\r\n  }\r\n\r\n  changeScreenOrientation() {\r\n    console.log(\"Set Double Orientation Change\");\r\n\r\n    ScreenOrientation.lockAsync(\r\n      ScreenOrientation.OrientationLock.LANDSCAPE_LEFT\r\n    );\r\n    ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.PORTRAIT_UP);\r\n    this._handleDidMount();\r\n    this.printChange();\r\n  }\r\n\r\n  printChange() {\r\n    const diff = diffString(th, this.state.oracleJSON);\r\n    if (diff) {\r\n      console.log(\"The Diffrence\");\r\n\r\n      console.log(diff);\r\n    } else console.log(\"No Diff\");\r\n  }\r\n  render() {\r\n    return <Text></Text>;\r\n  }\r\n}\r\n\r\nexport default DoubleOrientationChange;\r\n"]},"metadata":{},"sourceType":"module"}