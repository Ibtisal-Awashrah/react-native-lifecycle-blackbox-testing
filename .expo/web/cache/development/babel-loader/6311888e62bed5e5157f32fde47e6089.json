{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\React\\\\Thesis Project\\\\my-project\\\\components\\\\BackgroundForground.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport renderer from \"react-test-renderer\";\nimport { diffString, diff } from \"json-diff\";\nexport var BackgroundForground = function (_Component) {\n  _inherits(BackgroundForground, _Component);\n\n  var _super = _createSuper(BackgroundForground);\n\n  function BackgroundForground(props) {\n    var _this;\n\n    _classCallCheck(this, BackgroundForground);\n\n    _this = _super.call(this, props);\n\n    _this._handleAppStateChange = function (nextAppState) {\n      var guiTree = renderer.create(_this.props.children).toJSON();\n\n      if (_this.state.appState.match(/active/) && !_this.state.isChange) {\n        console.log(\"Application is in the background\");\n\n        _this.setState({\n          oracleJSON: guiTree\n        });\n\n        console.log(_this.state.isChange);\n\n        _this.setBackgoundAction();\n\n        _this.setState({\n          appState: nextAppState\n        });\n      }\n\n      if (_this.state.appState.match(/inactive|background/) && !_this.state.isChange) {\n        _this.setForgroundAction();\n\n        _this.setState({\n          isChange: true\n        });\n\n        _this.setState({\n          uiJSON: guiTree\n        });\n\n        var _diff = diffString(guiTree, _this.state.oracleJSON);\n\n        console.log(\"App has come to the foreground!\");\n      }\n\n      _this.printChange(diff);\n    };\n\n    _this.state = {\n      appState: AppState.currentState,\n      isChange: false,\n      oracleJSON: {},\n      uiJSON: {}\n    };\n    return _this;\n  }\n\n  _createClass(BackgroundForground, [{\n    key: \"setBackgoundAction\",\n    value: function setBackgoundAction() {\n      BackHandler.exitApp();\n    }\n  }, {\n    key: \"setForgroundAction\",\n    value: function setForgroundAction() {\n      Linking.openURL(\"exp://192.168.10.106:19000\");\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      AppState.addEventListener(\"change\", this._handleAppStateChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      AppState.addEventListener(\"change\", this._handleAppStateChange);\n    }\n  }, {\n    key: \"printChange\",\n    value: function printChange(diff) {\n      if (diff) {\n        console.log(\"The Diffrence\");\n        console.log(diff);\n      } else console.log(\"No Diff\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return BackgroundForground;\n}(Component);\nexport default BackgroundForground;","map":{"version":3,"sources":["C:/React/Thesis Project/my-project/components/BackgroundForground.js"],"names":["React","Component","renderer","diffString","diff","BackgroundForground","props","_handleAppStateChange","nextAppState","guiTree","create","children","toJSON","state","appState","match","isChange","console","log","setState","oracleJSON","setBackgoundAction","setForgroundAction","uiJSON","printChange","AppState","currentState","BackHandler","exitApp","Linking","openURL","addEventListener"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,WAAjC;AAEA,WAAaC,mBAAb;AAAA;;AAAA;;AACE,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAwBnBC,qBAxBmB,GAwBK,UAACC,YAAD,EAAkB;AACxC,UAAIC,OAAO,GAAGP,QAAQ,CAACQ,MAAT,CAAgB,MAAKJ,KAAL,CAAWK,QAA3B,EAAqCC,MAArC,EAAd;;AAEA,UAAI,MAAKC,KAAL,CAAWC,QAAX,CAAoBC,KAApB,CAA0B,QAA1B,KAAuC,CAAC,MAAKF,KAAL,CAAWG,QAAvD,EAAiE;AAC/DC,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;;AACA,cAAKC,QAAL,CAAc;AAAEC,UAAAA,UAAU,EAAEX;AAAd,SAAd;;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKL,KAAL,CAAWG,QAAvB;;AAEA,cAAKK,kBAAL;;AACA,cAAKF,QAAL,CAAc;AAAEL,UAAAA,QAAQ,EAAEN;AAAZ,SAAd;AACD;;AACD,UACE,MAAKK,KAAL,CAAWC,QAAX,CAAoBC,KAApB,CAA0B,qBAA1B,KACA,CAAC,MAAKF,KAAL,CAAWG,QAFd,EAGE;AACA,cAAKM,kBAAL;;AACA,cAAKH,QAAL,CAAc;AAAEH,UAAAA,QAAQ,EAAE;AAAZ,SAAd;;AACA,cAAKG,QAAL,CAAc;AAAEI,UAAAA,MAAM,EAAEd;AAAV,SAAd;;AACA,YAAML,KAAI,GAAGD,UAAU,CAACM,OAAD,EAAU,MAAKI,KAAL,CAAWO,UAArB,CAAvB;;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACD;;AACD,YAAKM,WAAL,CAAiBpB,IAAjB;AACD,KA9CkB;;AAEjB,UAAKS,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEW,QAAQ,CAACC,YADR;AAEXV,MAAAA,QAAQ,EAAE,KAFC;AAGXI,MAAAA,UAAU,EAAE,EAHD;AAIXG,MAAAA,MAAM,EAAE;AAJG,KAAb;AAFiB;AAQlB;;AATH;AAAA;AAAA,WAUE,8BAAqB;AACnBI,MAAAA,WAAW,CAACC,OAAZ;AACD;AAZH;AAAA;AAAA,WAcE,8BAAqB;AACnBC,MAAAA,OAAO,CAACC,OAAR,CAAgB,4BAAhB;AACD;AAhBH;AAAA;AAAA,WAiBE,6BAAoB;AAClBL,MAAAA,QAAQ,CAACM,gBAAT,CAA0B,QAA1B,EAAoC,KAAKxB,qBAAzC;AACD;AAnBH;AAAA;AAAA,WAqBE,gCAAuB;AACrBkB,MAAAA,QAAQ,CAACM,gBAAT,CAA0B,QAA1B,EAAoC,KAAKxB,qBAAzC;AACD;AAvBH;AAAA;AAAA,WAgDE,qBAAYH,IAAZ,EAAkB;AAChB,UAAIA,IAAJ,EAAU;AACRa,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEAD,QAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACD,OAJD,MAIOa,OAAO,CAACC,GAAR,CAAY,SAAZ;AACR;AAtDH;AAAA;AAAA,WAwDE,kBAAS;AACP,aAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AA1DH;;AAAA;AAAA,EAAyCjB,SAAzC;AA6DA,eAAeI,mBAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Text, BackHandler, Linking, AppState } from \"react-native\";\r\nimport renderer from \"react-test-renderer\";\r\nimport { diffString, diff } from \"json-diff\";\r\n\r\nexport class BackgroundForground extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      appState: AppState.currentState,\r\n      isChange: false,\r\n      oracleJSON: {},\r\n      uiJSON: {},\r\n    };\r\n  }\r\n  setBackgoundAction() {\r\n    BackHandler.exitApp();\r\n  }\r\n\r\n  setForgroundAction() {\r\n    Linking.openURL(\"exp://192.168.10.106:19000\");\r\n  }\r\n  componentDidMount() {\r\n    AppState.addEventListener(\"change\", this._handleAppStateChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    AppState.addEventListener(\"change\", this._handleAppStateChange);\r\n  }\r\n\r\n  _handleAppStateChange = (nextAppState) => {\r\n    var guiTree = renderer.create(this.props.children).toJSON();\r\n\r\n    if (this.state.appState.match(/active/) && !this.state.isChange) {\r\n      console.log(\"Application is in the background\");\r\n      this.setState({ oracleJSON: guiTree });\r\n      console.log(this.state.isChange);\r\n\r\n      this.setBackgoundAction();\r\n      this.setState({ appState: nextAppState });\r\n    }\r\n    if (\r\n      this.state.appState.match(/inactive|background/) &&\r\n      !this.state.isChange\r\n    ) {\r\n      this.setForgroundAction();\r\n      this.setState({ isChange: true });\r\n      this.setState({ uiJSON: guiTree });\r\n      const diff = diffString(guiTree, this.state.oracleJSON);\r\n      console.log(\"App has come to the foreground!\");\r\n    }\r\n    this.printChange(diff);\r\n  };\r\n  printChange(diff) {\r\n    if (diff) {\r\n      console.log(\"The Diffrence\");\r\n\r\n      console.log(diff);\r\n    } else console.log(\"No Diff\");\r\n  }\r\n\r\n  render() {\r\n    return <Text></Text>;\r\n  }\r\n}\r\n\r\nexport default BackgroundForground;\r\n"]},"metadata":{},"sourceType":"module"}