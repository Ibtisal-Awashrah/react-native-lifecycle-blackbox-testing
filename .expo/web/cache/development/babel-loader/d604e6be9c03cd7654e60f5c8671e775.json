{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\React\\\\Thesis Project\\\\my-project\\\\components\\\\VisibleLoopTesting.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport renderer from 'react-test-renderer';\nimport { diffString } from 'json-diff';\nimport App from \"./../App\";\n\nvar VisibleLoopTesting = function (_Component) {\n  _inherits(VisibleLoopTesting, _Component);\n\n  var _super = _createSuper(VisibleLoopTesting);\n\n  function VisibleLoopTesting(props) {\n    var _this;\n\n    _classCallCheck(this, VisibleLoopTesting);\n\n    _this = _super.call(this, props);\n\n    _this._handleAppStateChange = function (nextAppState) {\n      if (AppState.currentState.match(/active/)) {\n        var tree1 = renderer.create(React.createElement(App, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 40\n          }\n        })).toJSON();\n\n        _this.setState({\n          appJson: tree1\n        });\n\n        console.log(\"App has come to the foreground!\");\n      }\n\n      if (AppState.currentState.match(/inactive|background/)) {\n        Linking.openURL(\"exp://192.168.10.106:19000\");\n      }\n\n      if (_this.state.appState.match(/inactive|background/) && nextAppState === \"active\") {\n        console.log(\"App has come to the foreground!\");\n        var tree = renderer.create(React.createElement(App, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 40\n          }\n        })).toJSON();\n        console.log(diffString(_this.state.appJson, tree));\n      }\n\n      _this.setState({\n        appState: nextAppState\n      });\n    };\n\n    _this.state = {\n      appState: AppState.currentState,\n      applicationName: '',\n      appJson: {},\n      randomColor: null\n    };\n    return _this;\n  }\n\n  _createClass(VisibleLoopTesting, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      AppState.addEventListener(\"change\", this._handleAppStateChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      AppState.addEventListener(\"change\", this._handleAppStateChange);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, \" textInComponent \"));\n    }\n  }]);\n\n  return VisibleLoopTesting;\n}(Component);\n\nexport default VisibleLoopTesting;","map":{"version":3,"sources":["C:/React/Thesis Project/my-project/components/VisibleLoopTesting.js"],"names":["React","Component","renderer","diffString","App","VisibleLoopTesting","props","_handleAppStateChange","nextAppState","AppState","currentState","match","tree1","create","toJSON","setState","appJson","console","log","Linking","openURL","state","appState","tree","applicationName","randomColor","addEventListener"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAKE,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,GAAP;;IAEIC,kB;;;;;AACF,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAmBjBC,qBAnBiB,GAmBO,UAAAC,YAAY,EAAI;AACtC,UAAIC,QAAQ,CAACC,YAAT,CAAsBC,KAAtB,CAA4B,QAA5B,CAAJ,EAA0C;AACxC,YAAMC,KAAK,GAAEV,QAAQ,CAACW,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB,EAAwBC,MAAxB,EAAb;;AACA,cAAKC,QAAL,CAAc;AAACC,UAAAA,OAAO,EAAGJ;AAAX,SAAd;;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AAED;;AAED,UAAIT,QAAQ,CAACC,YAAT,CAAsBC,KAAtB,CAA4B,qBAA5B,CAAJ,EAAuD;AACrDQ,QAAAA,OAAO,CAACC,OAAR,CAAgB,4BAAhB;AACD;;AACD,UACE,MAAKC,KAAL,CAAWC,QAAX,CAAoBX,KAApB,CAA0B,qBAA1B,KACAH,YAAY,KAAK,QAFnB,EAGE;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACA,YAAMK,IAAI,GAAGrB,QAAQ,CAACW,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB,EAAwBC,MAAxB,EAAb;AAEAG,QAAAA,OAAO,CAACC,GAAR,CAAYf,UAAU,CAAC,MAAKkB,KAAL,CAAWL,OAAZ,EAAqBO,IAArB,CAAtB;AAED;;AAED,YAAKR,QAAL,CAAc;AAAEO,QAAAA,QAAQ,EAAEd;AAAZ,OAAd;AAED,KA3CgB;;AAEf,UAAKa,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAEb,QAAQ,CAACC,YADV;AAETc,MAAAA,eAAe,EAAE,EAFR;AAGTR,MAAAA,OAAO,EAAC,EAHC;AAITS,MAAAA,WAAW,EAAE;AAJJ,KAAb;AAFe;AAQlB;;;;WACD,6BAAoB;AAEhBhB,MAAAA,QAAQ,CAACiB,gBAAT,CAA0B,QAA1B,EAAoC,KAAKnB,qBAAzC;AACD;;;WAED,gCAAuB;AAEpBE,MAAAA,QAAQ,CAACiB,gBAAT,CAA0B,QAA1B,EAAoC,KAAKnB,qBAAzC;AACF;;;WA4BL,kBAAS;AACP,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADE,CADJ;AAKD;;;;EApD8BN,S;;AAuDjC,eAAeI,kBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    AppState,\r\n    Linking\r\n  } from \"react-native\";\r\n  import renderer from 'react-test-renderer';\r\n  import { diffString } from 'json-diff';\r\n  import App from './../App'\r\n\r\nclass VisibleLoopTesting extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            appState: AppState.currentState,\r\n            applicationName: '',\r\n            appJson:{},\r\n            randomColor: null\r\n          };\r\n    }\r\n    componentDidMount() {\r\n  \r\n        AppState.addEventListener(\"change\", this._handleAppStateChange);\r\n      }\r\n    \r\n      componentWillUnmount() {\r\n    \r\n         AppState.addEventListener(\"change\", this._handleAppStateChange);\r\n      }\r\n    \r\n      _handleAppStateChange = nextAppState => {\r\n        if (AppState.currentState.match(/active/)){\r\n          const tree1= renderer.create(<App/>).toJSON();\r\n          this.setState({appJson : tree1});\r\n          console.log(\"App has come to the foreground!\");\r\n    \r\n        }\r\n        \r\n        if (AppState.currentState.match(/inactive|background/)){\r\n          Linking.openURL(\"exp://192.168.10.106:19000\");\r\n        }\r\n        if (\r\n          this.state.appState.match(/inactive|background/) &&\r\n          nextAppState === \"active\"\r\n        ) {\r\n          console.log(\"App has come to the foreground!\");\r\n          const tree = renderer.create(<App/>).toJSON();\r\n          //console.log(tree);\r\n          console.log(diffString(this.state.appJson, tree));\r\n          \r\n        }\r\n        \r\n        this.setState({ appState: nextAppState });\r\n       \r\n      };\r\n    \r\n  render() {\r\n    return (\r\n        <View>\r\n      <Text> textInComponent </Text>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VisibleLoopTesting;\r\n"]},"metadata":{},"sourceType":"module"}