{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\React\\\\Thesis Project\\\\my-project\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent, Component, useRef, useState, useEffect } from \"react\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport renderer from 'react-test-renderer';\nimport { diffString, diff } from 'json-diff';\nimport VisibleLoopTesting from \"./components/VisibleLoopTesting\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }\n      }, React.createElement(VisibleLoopTesting, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    padding: 30,\n    backgroundColor: \"#ffffff\"\n  },\n  input: {\n    width: 255,\n    height: 44,\n    padding: 10,\n    margin: 10,\n    backgroundColor: \"#FFF\",\n    borderColor: \"#000\",\n    borderRadius: 0.5,\n    borderWidth: 0.5\n  }\n});","map":{"version":3,"sources":["C:/React/Thesis Project/my-project/App.js"],"names":["React","PureComponent","Component","useRef","useState","useEffect","renderer","diffString","diff","VisibleLoopTesting","App","styles","container","StyleSheet","create","flex","alignItems","padding","backgroundColor","input","width","height","margin","borderColor","borderRadius","borderWidth"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA+BC,SAA/B,EAA2CC,MAA3C,EAAmDC,QAAnD,EAA6DC,SAA7D,QAA8E,OAA9E;;;;;;;;AAUA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,WAAjC;AACA,OAAOC,kBAAP;;IAEqBC,G;;;;;;;;;;;;;WA2EnB,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAWD;;;;EAvF8BV,S;;SAAZQ,G;AA0FrB,IAAMC,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,OAAO,EAAE,EAHA;AAITC,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,GADF;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLJ,IAAAA,OAAO,EAAE,EAHJ;AAILK,IAAAA,MAAM,EAAE,EAJH;AAKLJ,IAAAA,eAAe,EAAE,MALZ;AAMLK,IAAAA,WAAW,EAAE,MANR;AAOLC,IAAAA,YAAY,EAAE,GAPT;AAQLC,IAAAA,WAAW,EAAE;AARR;AAPwB,CAAlB,CAAf","sourcesContent":["import React, {PureComponent , Component,  useRef, useState, useEffect } from \"react\";\nimport {\n  AppState,\n  View,\n  StyleSheet,\n  Text,\n  TextInput,\n  Button,\n  Linking\n} from \"react-native\";\nimport renderer from 'react-test-renderer';\nimport { diffString, diff } from 'json-diff';\nimport VisibleLoopTesting from './components/VisibleLoopTesting'\n\nexport default class App extends Component {\n//   state = {\n//     appState: AppState.currentState,\n//     applicationName: '',\n//     appJson:{},\n//     randomColor: null\n//   };\n\n//   getRandomColor = () =>\n//   {\n//       return 'rgb(' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ')';\n//   }\n\n//   componentDidMount() {\n  \n//     AppState.addEventListener(\"change\", this._handleAppStateChange);\n//   }\n\n//   componentWillUnmount() {\n\n//      AppState.addEventListener(\"change\", this._handleAppStateChange);\n//   }\n\n//   _handleAppStateChange = nextAppState => {\n//     if (AppState.currentState.match(/active/)){\n//       const tree1 = renderer.create(<App />).toJSON();\n//       this.setState({appJson : tree1});\n//       console.log(\"App has come to the foreground!\");\n\n//     }\n    \n//     if (AppState.currentState.match(/inactive|background/)){\n//       this.getRandomColor\n//       Linking.openURL(\"exp://192.168.10.106:19000\");\n//     }\n//     if (\n//       this.state.appState.match(/inactive|background/) &&\n//       nextAppState === \"active\"\n//     ) {\n//       console.log(\"App has come to the foreground!\");\n//       const tree = renderer.create(<App />).toJSON();\n//       //console.log(tree);\n//       console.log(diffString(this.state.appJson, tree));\n      \n//     }\n    \n//     this.setState({ appState: nextAppState });\n   \n//   };\n\n//   openApplication = () => {\n//     const tree = renderer.create(<App />).toJSON();\n//     console.log(tree);\n\n//     return tree;\n      \n        \n// }\n\n// componentWillMount()\n// {\n//     // getRandomColor method returns a new color code in RGB format so\n//     // get new color code from getRandomColor function and save it in\n//     // randomColor state variable.\n\n//     this.setState({ randomColor: this.getRandomColor() });\n// }\n\n// //  function called on button click\n// generateRandomColor = () =>\n// {\n//     this.setState({ randomColor: this.getRandomColor() });\n// }\n\n \n  render() {\n    return (\n      <View style={styles.container}>\n\n \n   \n\n  \n        <VisibleLoopTesting/>\n      </View>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    padding: 30,\n    backgroundColor: \"#ffffff\"\n  },\n  input: {\n    width: 255,\n    height: 44,\n    padding: 10,\n    margin: 10,\n    backgroundColor: \"#FFF\",\n    borderColor: \"#000\",\n    borderRadius: 0.5,\n    borderWidth: 0.5\n  }\n});"]},"metadata":{},"sourceType":"module"}