{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\React\\\\my-project\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useRef, useState, useEffect } from \"react\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport renderer from 'react-test-renderer';\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      appState: AppState.currentState,\n      applicationName: ''\n    };\n\n    _this._handleAppStateChange = function (nextAppState) {\n      var RNFS = require('react-native-fs');\n\n      if (AppState.currentState.match(/inactive|background/)) {\n        var path = RNFS.DocumentDirectoryPath + '/test.txt';\n        Linking.openURL(\"exp://192.168.10.110:19000\");\n        var tree = renderer.create(React.createElement(App, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 38\n          }\n        })).toJSON();\n        RNFS.writeFile(path, tree, 'utf8').then(function (success) {\n          console.log('FILE WRITTEN!');\n        }).catch(function (err) {\n          console.log(err.message);\n        });\n        console.log(tree);\n      }\n\n      if (_this.state.appState.match(/inactive|background/) && nextAppState === \"active\") {\n        console.log(\"App has come to the foreground!\");\n      }\n\n      _this.setState({\n        appState: nextAppState\n      });\n    };\n\n    _this.openApplication = function () {\n      var url = \"vnd.youtube:\";\n      Linking.openURL(url);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      AppState.addEventListener(\"change\", this._handleAppStateChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      setTimeout(function () {\n        AppState.addEventListener(\"change\", this._handleAppStateChange);\n      }, 10000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Application Name\",\n        placeholderTextColor: \"#9a73ef\",\n        onChangeText: this.applicationName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        style: {\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        onPress: this.openApplication,\n        title: \"Open \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    padding: 30,\n    backgroundColor: \"#ffffff\"\n  },\n  input: {\n    width: 255,\n    height: 44,\n    padding: 10,\n    margin: 10,\n    backgroundColor: \"#FFF\",\n    borderColor: \"#000\",\n    borderRadius: 0.5,\n    borderWidth: 0.5\n  }\n});","map":{"version":3,"sources":["C:/React/my-project/App.js"],"names":["React","Component","useRef","useState","useEffect","renderer","App","state","appState","AppState","currentState","applicationName","_handleAppStateChange","nextAppState","RNFS","require","match","path","DocumentDirectoryPath","Linking","openURL","tree","create","toJSON","writeFile","then","success","console","log","catch","err","message","setState","openApplication","url","addEventListener","setTimeout","styles","container","input","marginTop","StyleSheet","flex","alignItems","padding","backgroundColor","width","height","margin","borderColor","borderRadius","borderWidth"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8CC,SAA9C,QAA+D,OAA/D;;;;;;;;AAUA,OAAOC,QAAP,MAAqB,qBAArB;;IAKqBC,G;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAEC,QAAQ,CAACC,YADb;AAENC,MAAAA,eAAe,EAAE;AAFX,K;;UAcRC,qB,GAAwB,UAAAC,YAAY,EAAI;AACtC,UAAIC,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAlB;;AACA,UAAIN,QAAQ,CAACC,YAAT,CAAsBM,KAAtB,CAA4B,qBAA5B,CAAJ,EAAuD;AACrD,YAAIC,IAAI,GAAGH,IAAI,CAACI,qBAAL,GAA6B,WAAxC;AAIEC,QAAAA,OAAO,CAACC,OAAR,CAAgB,4BAAhB;AACA,YAAMC,IAAI,GAAGhB,QAAQ,CAACiB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB,EAAyBC,MAAzB,EAAb;AAEAT,QAAAA,IAAI,CAACU,SAAL,CAAeP,IAAf,EAAoBI,IAApB,EAA0B,MAA1B,EACCI,IADD,CACM,UAACC,OAAD,EAAa;AACnBC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACP,SAHO,EAIPC,KAJO,CAID,UAACC,GAAD,EAAS;AACfH,UAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,OAAhB;AACA,SANO;AAOAJ,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEH;;AACD,UACE,MAAKd,KAAL,CAAWC,QAAX,CAAoBQ,KAApB,CAA0B,qBAA1B,KACAH,YAAY,KAAK,QAFnB,EAGE;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACD;;AACD,YAAKI,QAAL,CAAc;AAAExB,QAAAA,QAAQ,EAAEK;AAAZ,OAAd;AACD,K;;UAEDoB,e,GAAkB,YAAM;AAEtB,UAAIC,GAAG,GAAG,cAAV;AACIf,MAAAA,OAAO,CAACC,OAAR,CAAgBc,GAAhB;AAED,K;;;;;;;WA3CL,6BAAoB;AAClBzB,MAAAA,QAAQ,CAAC0B,gBAAT,CAA0B,QAA1B,EAAoC,KAAKvB,qBAAzC;AACD;;;WAED,gCAAuB;AACrBwB,MAAAA,UAAU,CAAC,YAAU;AACpB3B,QAAAA,QAAQ,CAAC0B,gBAAT,CAA0B,QAA1B,EAAoC,KAAKvB,qBAAzC;AAAiE,OADxD,EACyD,KADzD,CAAV;AAED;;;WA2DD,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEyB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAID,MAAM,CAACE,KAA3B;AACS,QAAA,WAAW,EAAG,kBADvB;AAES,QAAA,oBAAoB,EAAG,SAFhC;AAGS,QAAA,YAAY,EAAI,KAAK5B,eAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAQE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAE6B,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKP,eAAtB;AAAuC,QAAA,KAAK,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CARF,CADF;AAeD;;;;EAxF8BhC,S;;SAAZK,G;AA2FrB,IAAM+B,MAAM,GAAGI,UAAU,CAACnB,MAAX,CAAkB;AAC/BgB,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,OAAO,EAAE,EAHA;AAITC,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO/BN,EAAAA,KAAK,EAAE;AACLO,IAAAA,KAAK,EAAE,GADF;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLH,IAAAA,OAAO,EAAE,EAHJ;AAILI,IAAAA,MAAM,EAAE,EAJH;AAKLH,IAAAA,eAAe,EAAE,MALZ;AAMLI,IAAAA,WAAW,EAAE,MANR;AAOLC,IAAAA,YAAY,EAAE,GAPT;AAQLC,IAAAA,WAAW,EAAE;AARR;AAPwB,CAAlB,CAAf","sourcesContent":["import React, { Component,  useRef, useState, useEffect } from \"react\";\nimport {\n  AppState,\n  View,\n  StyleSheet,\n  Text,\n  TextInput,\n  Button,\n  Linking,\n} from \"react-native\";\nimport renderer from 'react-test-renderer';\n\n\n\n\nexport default class App extends Component {\n  state = {\n    appState: AppState.currentState,\n    applicationName: ''\n  };\n\n  componentDidMount() {\n    AppState.addEventListener(\"change\", this._handleAppStateChange);\n  }\n\n  componentWillUnmount() {\n    setTimeout(function(){\n     AppState.addEventListener(\"change\", this._handleAppStateChange);},10000);\n  }\n\n  _handleAppStateChange = nextAppState => {\n    var RNFS = require('react-native-fs');\n    if (AppState.currentState.match(/inactive|background/)){\n      var path = RNFS.DocumentDirectoryPath + '/test.txt';\n\n      \n        \n        Linking.openURL(\"exp://192.168.10.110:19000\");\n        const tree = renderer.create(<App />).toJSON();\n        // write the file\n        RNFS.writeFile(path,tree, 'utf8')\n        .then((success) => {\n        console.log('FILE WRITTEN!');\n})\n.catch((err) => {\n console.log(err.message);\n});\n        console.log(tree);\n        \n    }\n    if (\n      this.state.appState.match(/inactive|background/) &&\n      nextAppState === \"active\"\n    ) {\n      console.log(\"App has come to the foreground!\");\n    }\n    this.setState({ appState: nextAppState });\n  };\n\n  openApplication = () => {\n\n    let url = \"vnd.youtube:\"\n        Linking.openURL(url);\n        \n      }\n\n    // diff(obj1, obj2) {\n    //     const result = {};\n    //     if (Object.is(obj1, obj2)) {\n    //         return undefined;\n    //     }\n    //     if (!obj2 || typeof obj2 !== 'object') {\n    //         return obj2;\n    //     }\n    //     Object.keys(obj1 || {}).concat(Object.keys(obj2 || {})).forEach(key => {\n    //         if(obj2[key] !== obj1[key] && !Object.is(obj1[key], obj2[key])) {\n    //             result[key] = obj2[key];\n    //         }\n    //         if(typeof obj2[key] === 'object' && typeof obj1[key] === 'object') {\n    //             const value = diff(obj1[key], obj2[key]);\n    //             if (value !== undefined) {\n    //                 result[key] = value;\n    //             }\n    //         }\n    //     });\n    //     return result;\n    // }\n  render() {\n    return (\n      <View style={styles.container}>\n      <TextInput style = {styles.input}\n               placeholder = \"Application Name\"\n               placeholderTextColor = \"#9a73ef\"\n               onChangeText = {this.applicationName}/>\n \n   \n      \n        <View style={{ marginTop: 20 }}>\n          <Button onPress={this.openApplication} title=\"Open \" />\n        </View>\n      </View>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    padding: 30,\n    backgroundColor: \"#ffffff\"\n  },\n  input: {\n    width: 255,\n    height: 44,\n    padding: 10,\n    margin: 10,\n    backgroundColor: \"#FFF\",\n    borderColor: \"#000\",\n    borderRadius: 0.5,\n    borderWidth: 0.5\n  }\n});"]},"metadata":{},"sourceType":"module"}