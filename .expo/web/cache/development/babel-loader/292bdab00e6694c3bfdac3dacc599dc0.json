{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\React\\\\my-project\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent, Component, useRef, useState, useEffect } from \"react\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport renderer from 'react-test-renderer';\nimport { diffString, diff } from 'json-diff';\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      appState: AppState.currentState,\n      applicationName: '',\n      appJson: {},\n      textInput: [],\n      inputData: []\n    };\n\n    _this.addTextInput = function (key) {\n      var textInput = _this.state.textInput;\n      textInput.push(React.createElement(TextInput, {\n        key: key,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 20\n        }\n      }));\n\n      _this.setState({\n        textInput: textInput\n      });\n    };\n\n    _this._handleAppStateChange = function (nextAppState) {\n      if (AppState.currentState.match(/active/)) {\n        var tree1 = renderer.create(React.createElement(App, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 37\n          }\n        })).toJSON();\n\n        _this.setState({\n          appJson: tree1\n        });\n\n        console.log(\"App has come to the foreground!\");\n      }\n\n      if (AppState.currentState.match(/inactive|background/)) {\n        _this.addTextInput(_this.state.textInput.length);\n\n        Linking.openURL(\"exp://192.168.10.110:19000\");\n      }\n\n      if (_this.state.appState.match(/inactive|background/) && nextAppState === \"active\") {\n        console.log(\"App has come to the foreground!\");\n        var tree = renderer.create(React.createElement(App, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 36\n          }\n        })).toJSON();\n        console.log(diffString(_this.state.appJson, tree));\n      }\n\n      _this.setState({\n        appState: nextAppState\n      });\n    };\n\n    _this.openApplication = function () {\n      var tree = renderer.create(React.createElement(App, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 34\n        }\n      })).toJSON();\n      console.log(tree);\n      return tree;\n    };\n\n    _this.addTextInput = function (index) {\n      var textInput = _this.state.textInput;\n      textInput.push(React.createElement(TextInput, {\n        style: styles.textInput,\n        onChangeText: function onChangeText(text) {\n          return _this.addValues(text, index);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 18\n        }\n      }));\n\n      _this.setState({\n        textInput: textInput\n      });\n    };\n\n    _this.removeTextInput = function () {\n      var textInput = _this.state.textInput;\n      var inputData = _this.state.inputData;\n      textInput.pop();\n      inputData.pop();\n\n      _this.setState({\n        textInput: textInput,\n        inputData: inputData\n      });\n    };\n\n    _this.addValues = function (text, index) {\n      var dataArray = _this.state.inputData;\n      var checkBool = false;\n\n      if (dataArray.length !== 0) {\n        dataArray.forEach(function (element) {\n          if (element.index === index) {\n            element.text = text;\n            checkBool = true;\n          }\n        });\n      }\n\n      if (checkBool) {\n        _this.setState({\n          inputData: dataArray\n        });\n      } else {\n        dataArray.push({\n          'text': text,\n          'index': index\n        });\n\n        _this.setState({\n          inputData: dataArray\n        });\n      }\n    };\n\n    _this.getValues = function () {\n      console.log('Data', _this.state.inputData);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      AppState.addEventListener(\"change\", this._handleAppStateChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      AppState.addEventListener(\"change\", this._handleAppStateChange);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Application Name\",\n        placeholderTextColor: \"#9a73ef\",\n        onChangeText: this.applicationName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        style: {\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        onPress: this.openApplication,\n        title: \"Open \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        title: \"Add\",\n        onPress: function onPress() {\n          return _this2.addTextInput(_this2.state.textInput.length);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      })), React.createElement(View, {\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        title: \"Remove\",\n        onPress: function onPress() {\n          return _this2.removeTextInput();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }))), this.state.textInput.map(function (value) {\n        return value;\n      }), React.createElement(Button, {\n        title: \"Get Values\",\n        onPress: function onPress() {\n          return _this2.getValues();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    padding: 30,\n    backgroundColor: \"#ffffff\"\n  },\n  input: {\n    width: 255,\n    height: 44,\n    padding: 10,\n    margin: 10,\n    backgroundColor: \"#FFF\",\n    borderColor: \"#000\",\n    borderRadius: 0.5,\n    borderWidth: 0.5\n  }\n});","map":{"version":3,"sources":["C:/React/my-project/App.js"],"names":["React","PureComponent","Component","useRef","useState","useEffect","renderer","diffString","diff","App","state","appState","AppState","currentState","applicationName","appJson","textInput","inputData","addTextInput","key","push","setState","_handleAppStateChange","nextAppState","match","tree1","create","toJSON","console","log","length","Linking","openURL","tree","openApplication","index","styles","text","addValues","removeTextInput","pop","dataArray","checkBool","forEach","element","getValues","addEventListener","container","input","marginTop","row","margin","map","value","StyleSheet","flex","alignItems","padding","backgroundColor","width","height","borderColor","borderRadius","borderWidth"],"mappings":"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","sourcesContent":["import React, {PureComponent , Component,  useRef, useState, useEffect } from \"react\";\nimport {\n  AppState,\n  View,\n  StyleSheet,\n  Text,\n  TextInput,\n  Button,\n  Linking,\n  AppRegistry\n} from \"react-native\";\nimport renderer from 'react-test-renderer';\nimport { diffString, diff } from 'json-diff';\n\nexport default class App extends Component {\n  state = {\n    appState: AppState.currentState,\n    applicationName: '',\n    appJson:{},\n    textInput : [],\n    inputData : []\n  };\n  addTextInput = (key) => {\n    let textInput = this.state.textInput;\n    textInput.push(<TextInput key={key} />);\n    this.setState({ textInput })\n  }\n\n\n  componentDidMount() {\n  \n    AppState.addEventListener(\"change\", this._handleAppStateChange);\n  }\n\n  componentWillUnmount() {\n\n     AppState.addEventListener(\"change\", this._handleAppStateChange);\n  }\n\n  _handleAppStateChange = nextAppState => {\n    if (AppState.currentState.match(/active/)){\n      const tree1 = renderer.create(<App />).toJSON();\n      this.setState({appJson : tree1});\n      console.log(\"App has come to the foreground!\");\n\n    }\n    \n    if (AppState.currentState.match(/inactive|background/)){\n        this.addTextInput(this.state.textInput.length);\n\n         Linking.openURL(\"exp://192.168.10.110:19000\");\n\n    }\n    if (\n      this.state.appState.match(/inactive|background/) &&\n      nextAppState === \"active\"\n    ) {\n      console.log(\"App has come to the foreground!\");\n      const tree = renderer.create(<App />).toJSON();\n      //console.log(tree);\n      console.log(diffString(this.state.appJson, tree));\n      \n    }\n    \n    this.setState({ appState: nextAppState });\n   \n  };\n\n  openApplication = () => {\n    const tree = renderer.create(<App />).toJSON();\n    console.log(tree);\n\n    return tree;\n      \n        \n}\n //function to add TextInput dynamically\n addTextInput = (index) => {\n  let textInput = this.state.textInput;\n  textInput.push(<TextInput style={styles.textInput}\n    onChangeText={(text) => this.addValues(text, index)} />);\n  this.setState({ textInput });\n}\n\n//function to remove TextInput dynamically\nremoveTextInput = () => {\n  let textInput = this.state.textInput;\n  let inputData = this.state.inputData;\n  textInput.pop();\n  inputData.pop();\n  this.setState({ textInput,inputData });\n}\n\n//function to add text from TextInputs into single array\naddValues = (text, index) => {\n  let dataArray = this.state.inputData;\n  let checkBool = false;\n  if (dataArray.length !== 0){\n    dataArray.forEach(element => {\n      if (element.index === index ){\n        element.text = text;\n        checkBool = true;\n      }\n    });\n  }\n  if (checkBool){\n  this.setState({\n    inputData: dataArray\n  });\n}\nelse {\n  dataArray.push({'text':text,'index':index});\n  this.setState({\n    inputData: dataArray\n  });\n}\n}\n\n//function to console the output\ngetValues = () => {\n  console.log('Data',this.state.inputData);\n}\n\n \n  render() {\n    return (\n      <View style={styles.container}>\n      <TextInput style = {styles.input}\n               placeholder = \"Application Name\"\n               placeholderTextColor = \"#9a73ef\"\n               onChangeText = {this.applicationName}/>\n \n   \n      \n        <View style={{ marginTop: 20 }}>\n          <Button onPress={this.openApplication} title=\"Open \" />\n        </View>\n        <View>\n        <View style= {styles.row}>\n          <View style={{margin: 10}}>\n        <Button title='Add' onPress={() => this.addTextInput(this.state.textInput.length)} />\n        </View>\n        <View style={{margin: 10}}>\n        <Button title='Remove' onPress={() => this.removeTextInput()} />\n        </View>\n        </View>\n        {this.state.textInput.map((value) => {\n          return value\n        })}\n        <Button title='Get Values' onPress={() => this.getValues()} />\n      </View>\n        \n      </View>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    padding: 30,\n    backgroundColor: \"#ffffff\"\n  },\n  input: {\n    width: 255,\n    height: 44,\n    padding: 10,\n    margin: 10,\n    backgroundColor: \"#FFF\",\n    borderColor: \"#000\",\n    borderRadius: 0.5,\n    borderWidth: 0.5\n  }\n});"]},"metadata":{},"sourceType":"module"}