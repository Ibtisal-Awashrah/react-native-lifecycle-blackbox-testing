{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\React\\\\Thesis Project\\\\my-project\\\\testingcomponents\\\\ChangingCSS.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nexport var ChangingCSS = function (_Component) {\n  _inherits(ChangingCSS, _Component);\n\n  var _super = _createSuper(ChangingCSS);\n\n  function ChangingCSS() {\n    var _this;\n\n    _classCallCheck(this, ChangingCSS);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      randomColor: null\n    };\n\n    _this.getRandomColor = function () {\n      return \"rgb(\" + Math.floor(Math.random() * 256) + \",\" + Math.floor(Math.random() * 256) + \",\" + Math.floor(Math.random() * 256) + \")\";\n    };\n\n    _this.generateRandomColor = function () {\n      _this.setState({\n        randomColor: _this.getRandomColor()\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ChangingCSS, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      Appthis.setState({\n        randomColor: this.getRandomColor()\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        randomColor: this.getRandomColor()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Text, {\n        style: [{\n          backgroundColor: this.state.randomColor\n        }, styles.color],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, \"Color Code: \", this.state.randomColor);\n    }\n  }]);\n\n  return ChangingCSS;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    padding: 30,\n    backgroundColor: \"#ffffff\"\n  },\n  input: {\n    width: 255,\n    height: 44,\n    padding: 10,\n    margin: 10,\n    backgroundColor: \"#FFF\",\n    borderColor: \"#000\",\n    borderRadius: 0.5,\n    borderWidth: 0.5\n  }\n});\nexport default ChangingCSS;","map":{"version":3,"sources":["C:/React/Thesis Project/my-project/testingcomponents/ChangingCSS.js"],"names":["React","Component","ChangingCSS","state","randomColor","getRandomColor","Math","floor","random","generateRandomColor","setState","Appthis","backgroundColor","styles","color","StyleSheet","create","container","flex","alignItems","padding","input","width","height","margin","borderColor","borderRadius","borderWidth"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAGA,WAAaC,WAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACEC,KADF,GACU;AAAEC,MAAAA,WAAW,EAAE;AAAf,KADV;;AAAA,UAGEC,cAHF,GAGmB,YAAM;AACrB,aACE,SACAC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CADA,GAEA,GAFA,GAGAF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAHA,GAIA,GAJA,GAKAF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CALA,GAMA,GAPF;AASD,KAbH;;AAAA,UAwBEC,mBAxBF,GAwBwB,YAAM;AAC1B,YAAKC,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAE,MAAKC,cAAL;AAAf,OAAd;AACD,KA1BH;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAcE,qCAA4B;AAK1BM,MAAAA,OAAO,CAACD,QAAR,CAAiB;AAAEN,QAAAA,WAAW,EAAE,KAAKC,cAAL;AAAf,OAAjB;AACD;AApBH;AAAA;AAAA,WAqBE,6BAAoB;AAClB,WAAKK,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAE,KAAKC,cAAL;AAAf,OAAd;AACD;AAvBH;AAAA;AAAA,WA4BE,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAC;AAAEO,UAAAA,eAAe,EAAE,KAAKT,KAAL,CAAWC;AAA9B,SAAD,EAA8CS,MAAM,CAACC,KAArD,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACe,KAAKX,KAAL,CAAWC,WAD1B,CADF;AAKD;AAlCH;;AAAA;AAAA,EAAiCH,SAAjC;AAoCA,IAAMY,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,OAAO,EAAE,EAHA;AAITR,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO/BS,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,GADF;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLH,IAAAA,OAAO,EAAE,EAHJ;AAILI,IAAAA,MAAM,EAAE,EAJH;AAKLZ,IAAAA,eAAe,EAAE,MALZ;AAMLa,IAAAA,WAAW,EAAE,MANR;AAOLC,IAAAA,YAAY,EAAE,GAPT;AAQLC,IAAAA,WAAW,EAAE;AARR;AAPwB,CAAlB,CAAf;AAkBA,eAAezB,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Text, StyleSheet, AppState } from \"react-native\";\r\n\r\nexport class ChangingCSS extends Component {\r\n  state = { randomColor: null };\r\n\r\n  getRandomColor = () => {\r\n    return (\r\n      \"rgb(\" +\r\n      Math.floor(Math.random() * 256) +\r\n      \",\" +\r\n      Math.floor(Math.random() * 256) +\r\n      \",\" +\r\n      Math.floor(Math.random() * 256) +\r\n      \")\"\r\n    );\r\n  };\r\n  UNSAFE_componentWillMount() {\r\n    // getRandomColor method returns a new color code in RGB format so\r\n    // get new color code from getRandomColor function and save it in\r\n    // randomColor state variable.\r\n\r\n    Appthis.setState({ randomColor: this.getRandomColor() });\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ randomColor: this.getRandomColor() });\r\n  }\r\n  generateRandomColor = () => {\r\n    this.setState({ randomColor: this.getRandomColor() });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Text style={[{ backgroundColor: this.state.randomColor }, styles.color]}>\r\n        Color Code: {this.state.randomColor}\r\n      </Text>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    padding: 30,\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  input: {\r\n    width: 255,\r\n    height: 44,\r\n    padding: 10,\r\n    margin: 10,\r\n    backgroundColor: \"#FFF\",\r\n    borderColor: \"#000\",\r\n    borderRadius: 0.5,\r\n    borderWidth: 0.5,\r\n  },\r\n});\r\nexport default ChangingCSS;\r\n"]},"metadata":{},"sourceType":"module"}