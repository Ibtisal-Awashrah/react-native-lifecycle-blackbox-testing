{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\React\\\\my-project\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent, Component, useRef, useState, useEffect } from \"react\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport renderer from 'react-test-renderer';\nimport { diffString, diff } from 'json-diff';\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      appState: AppState.currentState,\n      applicationName: '',\n      appJson: {},\n      randomColor: null\n    };\n\n    _this.getRandomColor = function () {\n      return 'rgb(' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ',' + Math.floor(Math.random() * 256) + ')';\n    };\n\n    _this._handleAppStateChange = function (nextAppState) {\n      if (AppState.currentState.match(/active/)) {\n        var tree1 = renderer.create(React.createElement(App, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 37\n          }\n        })).toJSON();\n\n        _this.setState({\n          appJson: tree1\n        });\n\n        console.log(\"App has come to the foreground!\");\n      }\n\n      if (AppState.currentState.match(/inactive|background/)) {\n        _this.getRandomColor;\n        Linking.openURL(\"exp://192.168.10.110:19000\");\n      }\n\n      if (_this.state.appState.match(/inactive|background/) && nextAppState === \"active\") {\n        console.log(\"App has come to the foreground!\");\n        var tree = renderer.create(React.createElement(App, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 36\n          }\n        })).toJSON();\n        console.log(diffString(_this.state.appJson, tree));\n      }\n\n      _this.setState({\n        appState: nextAppState\n      });\n    };\n\n    _this.openApplication = function () {\n      var tree = renderer.create(React.createElement(App, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 34\n        }\n      })).toJSON();\n      console.log(tree);\n      return tree;\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      AppState.addEventListener(\"change\", this._handleAppStateChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      AppState.addEventListener(\"change\", this._handleAppStateChange);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Application Name\",\n        placeholderTextColor: \"#9a73ef\",\n        onChangeText: this.applicationName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        style: {\n          marginTop: 20,\n          backgroundColor: this.state.randomColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        onPress: this.openApplication,\n        title: \"Open \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    padding: 30,\n    backgroundColor: \"#ffffff\"\n  },\n  input: {\n    width: 255,\n    height: 44,\n    padding: 10,\n    margin: 10,\n    backgroundColor: \"#FFF\",\n    borderColor: \"#000\",\n    borderRadius: 0.5,\n    borderWidth: 0.5\n  }\n});","map":{"version":3,"sources":["C:/React/my-project/App.js"],"names":["React","PureComponent","Component","useRef","useState","useEffect","renderer","diffString","diff","App","state","appState","AppState","currentState","applicationName","appJson","randomColor","getRandomColor","Math","floor","random","_handleAppStateChange","nextAppState","match","tree1","create","toJSON","setState","console","log","Linking","openURL","tree","openApplication","addEventListener","styles","container","input","marginTop","backgroundColor","StyleSheet","flex","alignItems","padding","width","height","margin","borderColor","borderRadius","borderWidth"],"mappings":"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","sourcesContent":["import React, {PureComponent , Component,  useRef, useState, useEffect } from \"react\";\nimport {\n  AppState,\n  View,\n  StyleSheet,\n  Text,\n  TextInput,\n  Button,\n  Linking\n} from \"react-native\";\nimport renderer from 'react-test-renderer';\nimport { diffString, diff } from 'json-diff';\n\nexport default class App extends Component {\n  state = {\n    appState: AppState.currentState,\n    applicationName: '',\n    appJson:{},\n    randomColor: null\n  };\n\n  getRandomColor = () =>\n  {\n      return 'rgb(' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ')';\n  }\n\n  componentDidMount() {\n  \n    AppState.addEventListener(\"change\", this._handleAppStateChange);\n  }\n\n  componentWillUnmount() {\n\n     AppState.addEventListener(\"change\", this._handleAppStateChange);\n  }\n\n  _handleAppStateChange = nextAppState => {\n    if (AppState.currentState.match(/active/)){\n      const tree1 = renderer.create(<App />).toJSON();\n      this.setState({appJson : tree1});\n      console.log(\"App has come to the foreground!\");\n\n    }\n    \n    if (AppState.currentState.match(/inactive|background/)){\n      this.getRandomColor\n      Linking.openURL(\"exp://192.168.10.110:19000\");\n    }\n    if (\n      this.state.appState.match(/inactive|background/) &&\n      nextAppState === \"active\"\n    ) {\n      console.log(\"App has come to the foreground!\");\n      const tree = renderer.create(<App />).toJSON();\n      //console.log(tree);\n      console.log(diffString(this.state.appJson, tree));\n      \n    }\n    \n    this.setState({ appState: nextAppState });\n   \n  };\n\n  openApplication = () => {\n    const tree = renderer.create(<App />).toJSON();\n    console.log(tree);\n\n    return tree;\n      \n        \n}\n\n \n  render() {\n    return (\n      <View style={styles.container}>\n      <TextInput style = {styles.input}\n               placeholder = \"Application Name\"\n               placeholderTextColor = \"#9a73ef\"\n               onChangeText = {this.applicationName}/>\n \n   \n      \n        <View style={{ marginTop: 20 , backgroundColor: this.state.randomColor}}>\n          <Button onPress={this.openApplication} title=\"Open \" />\n        </View>\n        \n      </View>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    padding: 30,\n    backgroundColor: \"#ffffff\"\n  },\n  input: {\n    width: 255,\n    height: 44,\n    padding: 10,\n    margin: 10,\n    backgroundColor: \"#FFF\",\n    borderColor: \"#000\",\n    borderRadius: 0.5,\n    borderWidth: 0.5\n  }\n});"]},"metadata":{},"sourceType":"module"}